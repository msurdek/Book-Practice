large.states
large.states<-all.states[all.states$Area>=100000,c("Name","Area")]
large.states
merge(cold.states,large.states)
merge(cold.states,large.states,all=TRUE)
merge(cold.states,large.states,all.x=TRUE)
merge(cold.states,large.states,all.y=TRUE)
merge(cold.states,large.states,all=TRUE)
<-match(cold.states$Name,large.states$Name)
index
index<-match(cold.states$Name,large.states$Name)
index
large.states[na.omit(index),]
index<-cold.states$Name %in% large.states$Name
index
cold.states[index,]
some.states<-data.frame(Region=state.region,state.x77)
some.states<-data.frame(Region=state.region,state.x77)
some.states<-some.states[1:10,1:3]
some.states
sort(some.states$Population)
sort(some.states$Population,decreasing = TRUE)
order.pop<-order(some.states$Population)
order.pop
some.states[order.pop]
some.states$Population[order.pop]
some.states[order.pop]
some.states[order.pop,]
order.pop<-order(some.states$Population,decreasing = TRUE)
order.pop
some.states$Population[order.pop]
some.states[order.pop,]
some.states[order(some.states$Population,decreasing = TRUE),]
index<-with(some.states,order(Region,Population))
some.states[index,]
Titanic
str(Titanic)
apply(Titanic,1,sum)
apply(Titanic,3,sum)
apply(Titanic,c(3,4),sum)
lapply(iris,class)
sapply(iris.class)
sapply(iris,class)
sapply(iris,mean)
sapply(iris,mean)
sapply(iris,function(x) if(is.numeric(x)) mean(x) else NA)
sapply(iris,function(x) if(is.numeric(x)) mean(x) else "NA")
sapply(iris,function(x) if(is.numeric(x)) mean(x) else NA)
tapply(iris$Sepal.Length,iris$Species,mean)
str(mtcars)
cars<-transform(mtcars,
am = factor(am,levels=0:1,labels=c("Automatic","Manual")))
str(cars)
with(cars,tapply(mpg,am,mean))
with(cars,tapply(mpg,list(gear,am),mean))
with(cars,aggregate(mpg,list(gear=gear,am=am),mean))
aov(mpg~gear+am,data=cars)
install.packages(reshape2)
install.packages("reshape2")
library("reshape2")
goals<-data.frame(
Game=c("1st","2nd","3rd","4th"),
Venue=c("Bruges","Ghent","Ghent","Bruges"),
Granny=c(12,4,5,6),
Geraldine=c(5,4,2,4),
Gertrude=c(11,5,6,7)
)
goals
mgoals<-melt(goals)
mgoals
mgoals<-melt(goals,id.vars=c("Game","Venue"))
mgoals
dcast(mgoals,Venue+Game~variable,sum)
dcast(mgoals,variable~Venue,sum)
library("ggplot2")
install.packages("ggplot2")
library("ggplot2")
ggplot(mgoals,aes(x=variable,y=value,fill=Game)+
geom_bar(stat="identity") )
ggplot(mgoals,aes(x=variable,y=value,fill=Game)+
geom_bar(stat="identity") )
ggplot(mgoals,aes(x=variable,y=value,fill=Game))+
geom_bar(stat="identity") )
ggplot(mgoals,aes(x=variable,y=value,fill=Game))+
geom_bar(stat="identity")
source('~/R/R For Dummies/chapter 13.R')
install.packages("reshape2")
sapply(mtcars, function(x),length(unique(x)))
sapply(mtcars, function(x), length(unique(x)))
sapply(mtcars, function(x), length(unique(x)))
?sapply
sapply(mtcars, function(x) length(unique(x)))
sapply(mtcars, function(x)length(unique(x)))
cars<-transform(mtcars[c(1,2,9,10)])
cars<-transform(mtcars[c(1,2,9,10)]
gear=ordered(gear)
am=factor(am,labels=c("auto","manual")))
cars<-transform(mtcars[c(1,2,9,10)],
gear=ordered(gear),
am=factor(am,labels=c("auto","manual")))
str(cars)
mean(cars$mpg)
median(cars$cyl)
sd(cars$mpg)
quantile(cars$mpg)
fivenum(cars$mpg)
quantile(cars$mpg,probs=c(0.05,0.95))
amtable<-table(cars$am)
amtable
cars<-transform(mtcars[c(1,2,9,10)],
gear=ordered(gear),
am=factor(am,labels=c("manual","auto")))
amtable<-table(cars$am)
amtable
class(amtable)
amtable/sum(amtable)
prop.table(amtable)
id<-amtable==max(amtable)
names(amtable)[id]
hist(cars$mpg,col="grey")
hist(cars$mpg,breaks=c(5,15,25,35))
hist(cars$mpg,col="grey")
mpgdens<-density(cars$mpg)
plot(mpgdens)
View(mpgdens)
mpgdens
hist(cars$mpg,col="grey",freq = FALSE)
lines(mpgdens)
summary(cars)
cars$cyl<-as.factor(cars$cyl)
summary(cars)
boxplot(mpg~cyl,data=cars)
boxplot(mpg~cyl,data=cars,range=0)
boxplot(mpg~cyl,data=cars)
mpghist<-hist(cars$mpg)
mpghist<-hist(cars$mph)
mpghist<-hist(cars$mpg)
mpgbox<-boxplot(mpg~cyl,data=cars)
n<-nlevels(as.factor(cars$cyl))
text(1:n,mpgbox$stats[1,],paste("n=",mpgbox$n),pos=1)
plot(iris)
plot(iris[-5])
str(iris)
plot(iris)
plot(iris[-5])
with(iris,cor(Petal.Width,Petal,Length))
with(iris, cor(Petal.Width,Petal,Length))
with(iris, cor(Petal.Width,Petal.Length))
iris.cor<-cor(iris[-5])
iris.cor["Petal.Width","Petal.Length"]
with(cars,table(am,gear))
trial<-matrix(c(34,11,9,32),ncol=2)
colname(trial)<-c("sick","healthy")
rownames(trial)<-c("risk","no_risk")
trial.table<-as.table(trial)
trial<-matrix(c(34,11,9,32),ncol=2)
colnames(trial)<-c("sick","healthy")
rownames(trial)<-c("risk","no_risk")
trial.table<-as.table(trial)
trial.table
trial.df<-as.data.frame(trial)
str(trial.df)
trial.table.df<-as.da
trial.table.df<-as.data.frame(trial.table)
str(trial.table.df)
addmargins(trial.table)
prop.table(trial.table)
prop.table(trial.table,margin=1)
source('~/R/R For Dummies/chapter 14.R')
source('~/R/R For Dummies/chapter 15.R')
str(beaver2)
transform.beaver<-transform(beaver2,
activ=factor(activ,labels=c("no","yes")))
library("lattice")
histogram(~temp|activ,data=transform.beaver)
with(transform.beaver,
qqplot(temp[active=="yes"],
temp[active=="no"]))
with(transform.beaver,
qqplot(temp[activ=="yes"],
temp[activ=="no"]))
with(transform.beaver,
qqnorm(temp[activ=="yes"],
temp[activ=="no"]))
with(transform.beaver,
qqplot(temp[activ=="yes"],
temp[activ=="no"]))
with(transform.beaver,{
qqnorm(temp[activ=="no"],main="Inactive")
qqline(temp[activ=="no"])})
with(transform.beaver,{
qqnorm(temp[activ=="no"],main="Inactive")
qqline(temp[activ=="no"])})
shapiro.test(transform.beaver$temp)
with(transform.beaver,tapply(temp,active,shapiro.test))
with(transform.beaver,tapply(temp,activ,shapiro.test))
t.test(temp~activ,data = transform.beaver)
with(transform.beaver,
t.test(temp[activ=="yes"],
t.test(temp[activ=="no"])))
with(transform.beaver,
t.test(temp[activ=="yes"],
t.test(temp[activ=="no"]))
with(transform.beaver,
t.test(temp[activ=="yes"],
temp[activ=="no"]))
with(transform.beaver,
t.test(temp[activ=="yes"],temp[activ=="no"]))
wilcox.test(temp~activ,data=transform.beaver)
t.test(temp~activ,data = transform.beaver,less)
?t.test
t.test(temp~activ,data = transform.beaver,alternative=less)
t.test(temp~activ,data = transform.beaver,alternative="less")
t.test(temp~activ,data = transform.beaver,alternative="greater")
t.test(temp~activ,data = transform.beaver,alternative"less")
t.test(temp~activ,data = transform.beaver,alternative="less")
head(sleep)
sleep
t.test(extra~group,data=sleep,paired=TRUE)
source('~/R/R For Dummies/chapter 15.R')
survivors<- matrix(c(1791,1443,135,47),ncol=2)
colnames(survivors)<-c("survived","died")
rownames(survivors)<-c("no seat belt","seat belt")
survivors
result.prop<-prop.test(survivors)
result.prop
result.prop
chisq.test(survivors)
str(HairEyeColor)
HairEyeMargin<-margin.table(HairEyeColor,margin=c(1,2))
HairEyeMargin
chisq.test(HairEyeMargin)
str(InsectSprays)
AOVModel<-aov(count~spray,data=InsectSprays)
AOVModel
summary(AOVModel)
model.tables(AOVModel,type = "effect")
model.tables(AOVModel,type = "effects")
model.tables(AOVModel,type = "means")
Comparisons<-TukeyHSD(AOVModel)
Comparisons
Comparisons$spray["D-C",]
plot(Comparisons,;as=1)
plot(Comparisons,las=1)
Model<-lm(mpg~wt,data = mtcars)
Model
plot(Model)
coef.Model
coef.Model<-coef(Model)
coef.Model
Model
Model
plot(Model)
plot(mpg~wt,data = mtcars)
abline(coef=coef.Model)
abline(coef=coef.Model)
abline(Model)
plot(mpg~wt,data = mtcars)
abline(Model)
Model.summary<-summary(Model)
Model.summary
Model.anova<-anova(Model)
Model.anova
new.cars<-data.frame(wt=c(1.7,2.4,3.6))
predict(Model,new.cars)
predict(Model,new.cars,interval="confidence")
predict(Model,new.cars,interval="prediction")
source('~/R/R For Dummies/chapter 15.R')
2+2
source('~/R/R For Dummies/chapter 16.R')
large.islands<-head(sort(islands,decreasing = TRUE),10)
plot(large.islands)
plot(large.islands,main="Land area of continents and islands",
ylab="Land area in square miles")
text(large.islands,labels=names(large.islands),adj=c(0.5,1))
plot(faithful)
short.eruptions<-with(faithful,faithful[eruptions,3,])
short.eruptions<-with(faithful,faithful[eruptions,3,])
short.eruptions <- with(faithful, faithful[eruptions<3,])
plot(faithful)
points(short.eruptions,col="red",pch=19)
plot(faithful)
points(short.eruptions,col="red",pch=21)
points(short.eruptions,col="red",pch=19)
points(short.eruptions,col="red",bg="green",pch=19)
plot(faithful)
points(short.eruptions,col="red",bg="green",pch=19)
points(short.eruptions,col="red",bg="green",pch=20)
points(short.eruptions,col="red",bg="green",pch=21)
points(short.eruptions,col="red",pch=21)
points(short.eruptions,col="red",pch=19)
fit<-lm(waiting~eruptions,data=faithful)
lines(faithful$eruptions,fitted(fit),col="blue")
abline(v=3,col="purple")
abline(h=mean(faithful$waiting))
abline(a=coef(fit)[1],b=coef(fit)[2])
abline(fit,col="red")
plot(LakeHuron,type="1",main="type=\"1\"")
plot(LakeHuron,type="1",main="type=\"1\"")
plot(LakeHuron,type="p",main="type=\"p\"")
plot(LakeHuron,type="b",main="type=\"b\"")
plot(LakeHuron,type="p",main="type=\"p\"")
plot(LakeHuron,type="1",main="type=\"1\"")
plot(LakeHuron,type="1",main="type=\"1\"")
plot(LakeHuron,type="l",main="type=\"l\"")
plot(LakeHuron,type="c",main="type=\"c\"")
plot(LakeHuron,type="o",main="type=\"o\"")
plot(LakeHuron,type="b",main="type=\"b\"")
plot(LakeHuron,type="c",main="type=\"c\"")
plot(LakeHuron,type="o",main="type=\"o\"")
plot(LakeHuron,type="h",main="type=\"h\"")
plot(LakeHuron,type="n",main="type=\"n\"")
with(mtcars,plot(mpg,dist))
with(mtcars,plot(mpg,disp))
with(mtcars,boxplot(mpg,disp))
with(mtcars,hist(mpg))
pairs(iris)
pairs(iris[1:4])
y<-rep(1,length(x))
x<-seq(0.5,1.5,0.25)
plot(x,y,type="n")
x<-seq(0.5,1.5,0.25)
y<-rep(1,length(x))
plot(x,y,type="n")
points(x,y)
plot(faithful,
main="Eruptions of Old Faithful",
xlab="Eruption time (min)",
ylab="Waiting time to next eruption (Min)")
plot(faithful,las=0)
plot(faithful,las=1)
plot(faithful,las=2)
plot(faithful,las=3)
plot(faithful,las=0)
plot(faithful,las=2)
plot(faithful,las=0)
plot(faithful,las=1)
plot(faithful,las=2)
plot(faithful,las=3)
plot(faithful,las=2)
plot(faithful,las=1)
plot(faithful,las=0)
plot(faithful,las=1)
plot(faithful,las=2)
plot(faithful,las=3)
plot(faithful,bty="n")
plot(faithful,bty="o")
plot(faithful,bty="1")
plot(faithful,bty="l")
plot(faithful,bty="7")
plot(faithful,bty="o")
plot(faithful,bty="n")
plot(faithful,las=1,bty="l",col="red",pch=19)
x<-seq(0.5,1.5,0.25)
y<-rep(1,length(x))
plot(x,y,main="Effect of cex on text size")
text(x,y+0.1,labels=x,cex=x)
plot(x,y,main="Effect of cex.main, cex.lab and cex.axis",
cex.main=1.25,cex.lab=1.5,cex.axis=0.75)
plot(x,y,main="Effect of cex.main, cex.lab and cex.axis",
cex.main=5,cex.lab=1.5,cex.axis=0.75)
plot(x,y,main="Effect of cex.main, cex.lab and cex.axis",
cex.main=1.25,cex.lab=1.5,cex.axis=0.75)
old.par<-par(mfrow=c(1,2))
plot(faithful,main="Faithful eruptions")
plot(large.islands,main="Islands",ylab="Area")
par(old.par)
par(mfrow=c(1,1))
source('~/R/R For Dummies/chapter 16.R')
png(filename = "faithful.png")
plot(faithful)
dev.off()
source('~/R/R For Dummies/chapter 16.R')
transform.mtcars<-transform(mtcars,
cyl=factor(cyl),
am=factor(am,labels=c("Automatic","Manual")),
cars=rownames(mtcars))
library(lattice)
xyplot(mpg~hp|cyl,data=transform.mtcars)
xyplot(mpg~hp|cyl,data=transform.mtcars)
xyplot(mpg~hp|cyl,data=transform.mtcars,
type=c("p","r"))
xyplot(mpg~hp|cyl,data=transform.mtcars,
type=c("p","r"),
main="Fuel economy vs. Performance",
xlab="Performance (horse power",
ylab="Fuel economy (mpg)")
xyplot(mpg~hp|cyl,data=transform.mtcars,
type=c("p","r"),
main=list(
"Fuel economy vs. Performance given Number of Cylinders",
cex=0.75),
xlab=list(
"Performance (horse power)",
cex=0.75),
ylab=list(
"Fuel economy (mpg)",
cex=0.75),
scales=list(cex=0.5))
xyplot(mpg~hp|cyl,data=transform.mtcars,
type=c("p","r"),
par.settings=simpleTheme(col="red,col.line="blue))
xyplot(mpg~hp|cyl, data=transform.mtcars,
type=c("p","r"),
par.settings=simpleTheme(col="red", col.line="blue")
xyplot(mpg~hp|cyl, data=transform.mtcars,
type=c("p","r"),
par.settings=simpleTheme(col="red", col.line="blue"))
xyplot(mpg~hp|cyl, data=transform.mtcars,
type=c("p","r"),
debugSource('~/R/R For Dummies/chapter 17.R', echo=TRUE)
xyplot(mpg~hp|cyl, data=transform.mtcars,
type = c("p","r"),
par.settings = simpleTheme(col="red", col.line="blue"))
xyplot(mpg~hp|cyl, data=transform.mtcars,
type = c("p","r"),
par.settings = simpleTheme(col="red", col.line="blue"))
xyplot(mpg~hp|cyl, data=transform.mtcars,
type = c("p","r"),
par.settings = simpleTheme(col="red", col.line="blue"))
barchart(cars~mpg|cyl,data=transform.mtcars,
main="barchart",
scales=list(cex=0.5),
layout=c(3,1))
#making a box and whisker plot
bwplot(~hp|cyl,data=transform.mtcars,main="bwplot")
#plotting data in groups
str(longley)
library(reshape2)
mlongley<-melt(longley,id.vars="Year")
str(mlongley)
xyplot(value~Year|variable,data=mlongley,
layout=c(6,1),
par.strip.text=list(cex=0.5),
scales=list(cex=0.5))
barchart(cars~mpg|cyl,data=transform.mtcars,
group=am,
scales=list(cex=0.5),
layout=c(3,1))
plot.colours<-c("grey80","grey20")
barchart(cars~mpg|cyl,data=transform.mtcars,
main="barchart with groups",
group=am,
auto.key=TRUE,
par.settings=simpleTheme(col=plot.colours,border=plot.colours),
scales=list(cex=0.5),
layout=c(3,1))
my.plot<-xyplot(mpg~hp|cyl,data=transform.mtcars)
class(my.plot)
print(my.plot)
trellis.device(device="png",filename="xyplot.png")
print(my.plot)
dev.off()
library("ggplot2")
ggplot(faithul,aes(x=eruptions,y=waiting))+
geom_point()+
stat_smooth()
ggplot(faithful,aes(x=eruptions,y=waiting))+
geom_point()+
stat_smooth()
#creating a bar chart
ggplot(quakes,aes(x=depth))+geom_bar()
ggplot(quakes,aes(x=depth))+geom_bar(binwidth=50)
#bar chart
quakes.agg<-aggregate(mag~round(depth,-1),data=quakes,
FUN=length)
names(quakes.agg)<-c("depth","mag")
ggplot(quakes.agg,aes(x=depth,y=mag))+
geom_bar(stat="identity")
#making a scatterplot
ggplot(quakes,aes(x=long,y=lat))+geom_point()
#creating line charts
ggplot(longley,aes(x=Year,y=Unemployed))+geom_line()
#binning data
ggplot(quakes,aes(x=depth))+geom_bar(binwidth = 50)
ggplot(quakes,aes(x=depth))+stat_bin(binwidth = 50)
p<-ggplot(longley,aes(x=Year,y=Employed))+geom_point()
p
p+stat_smooth()
p+stat_smooth(method="lm")
p+stat_smooth()
p+stat_smooth(method="lm")
m<-ggplot(mtcars,aes(x=hp,y=mpg))+geom_point()
m
m+stat_smooth(method="lm")+facet_grid(~cyl)
ggplot(mtcars,aes(x=hp,y=mpg))+geom_point(color="red")+
xlab("Performance (horse power")+
ylab("Fuel comsumption (mpg)")+
ggtitle("Motor car comparison")
t<-ggplot(mtcars,aes(x=hp,y=mpg))+
geom_point(aes(shape=factor(cyl),colour=factor(cyl)))
t
t+
scale_shape_discrete(name="Cylinders")+
scale_color_discrete(name="Cylinders")
t
t+
scale_shape_discrete(name="Cylinders")+
scale_color_discrete(name="Cylinders")
t
t+
scale_shape_discrete(name="Cylinders")+
scale_color_discrete(name="Cylinders")
t+
scale_shape_discrete(name="Cylinders")+
scale_color_discrete(name="Cylinders")
library("ggplot2")
t+
scale_shape_discrete(name="Cylinders")+
scale_color_discrete(name="Cylinders")
t
load("~/R/Business Analytics/Sales Per Day By Month/Sales Per Day By Month.Rproj")
